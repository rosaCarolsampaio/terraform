image: ubuntu

stages:
  - build
  - create
  - list
  - dynamodb
  - lambda

services:
  - name: localstack/localstack
    alias: localstack

variables:
  SERVICES: s3,sns,sqs, dynamodb,lambda
  HOSTNAME_EXTERNAL: localstack 
  DEFAULT_REGION: eu-west-2
  AWS_ACCESS_KEY_ID: localkey
  AWS_SECRET_ACCESS_KEY: localsecret
  AWS_DYNAMODB_ENDPOINT: http://dynamodb:8000

before_script:
  # - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.example.com
  - apt -y update
  - apt -y install pip
  - pip install awscli

#after_script:
 

test-application:
  stage: build 
  # extends: build
  script:
    - aws s3api list-buckets --endpoint-url=http://localstack:4566
    - aws --endpoint-url=http://localstack:4566 s3 ls
    - aws --endpoint-url=http://localstack:4566 s3 mb s3://my-test-bucket
    - aws s3api list-buckets --endpoint-url=http://localstack:4566

test-localstack:
  stage: list
  script:
    - aws s3api list-buckets --endpoint-url=http://localstack:4566

dynamo-localstack:
  stage: dynamodb
  script:
    - aws configure set region $DEFAULT_REGION
    - aws --endpoint-url http://localstack:4566 dynamodb create-table --table-name Music --attribute-definitions AttributeName=Artist,AttributeType=S AttributeName=SongTitle,AttributeType=S --key-schema AttributeName=Artist,KeyType=HASH AttributeName=SongTitle,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1
    # - aws --endpoint-url http://localstack:8000 dynamodb put-item --table-name Music --item '{"Artist": {"S": "No One You Know"}, "SongTitle": {"S": "Call Me Today"}, "AlbumTitle": {"S": "Somewhat Famous"}}' --return-consumed-capacity TOTAL 
    # - aws --endpoint-url http://localstack:8000 dynamodb list-tables 
    # - aws http://localstack:8000dynamodb query --table-name Music

lambda-localstack:
  stage: lambda
  script:
    - aws configure set region DEFAULT_REGION 
    - aws --endpoint-url http://localstack:4566 lambda list-functions