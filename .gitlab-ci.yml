image: ubuntu

stages:
  - build
  - kafka
  - golang
  - create
  - list
  - dynamodb
  - lambda


services:
  - name: localstack/localstack
    alias: localstack
  - name: golang:latest
    alias: golang

variables:
  SERVICES: s3,sns,sqs, dynamodb,lambda, kafka
  HOSTNAME_EXTERNAL: localstack 
  DEFAULT_REGION: eu-west-2
  awscli-local_ACCESS_KEY_ID: localkey
  awscli-local_SECRET_ACCESS_KEY: localsecret
  awscli-local_DYNAMODB_ENDPOINT: http://dynamodb:8000
  GIT_CLEAN_FLAGS: none
  LOCALSTACK_HOST: http://localstack:4566

before_script:
  # - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.example.com
  - apt -y update
  - apt -y install pip
  - pip install awscli  awscli-local

#after_script:
 
cache:
  paths:
    - s3.localhost.localstack.cloud/

test-application:
  stage: build 
  # extends: build
  # cache:
  #   paths:
  #     - s3://my-test-bucket/
  artifacts:
    paths:
      - s3://my-test-bucket/
  script:
    - awscli-local s3api list-buckets 
    - awscli-local  s3 ls
    - awscli-local  s3 mb s3://my-test-bucket
    - awscli-local s3api list-buckets 
    - aws s3 cp ./ s3://my-test-bucket/

test-localstack:
  stage: list
  dependencies:
    - test-application
  script:
    - awscli-local  s3 ls
    - awscli-local s3api list-buckets 

dynamo-localstack:
  stage: dynamodb
  script:
    - echo '{"Artist":{"S":"Acme Band"},"SongTitle":{"S":"Happy Day"}, "AlbumTitle":{"S":"Songs About Life"},"Awards":{"N":"10"}}' > item_table.json 
    - echo '{"Artist":{"AttributeValueList":[{"S":"Acme Band"}],"ComparisonOperator":"EQ"},"SongTitle":{"AttributeValueList":[{"S":"Happy Day"}],"ComparisonOperator":"EQ"}}' > query_table.json 
    - awscli-local configure set region $DEFAULT_REGION
    - awscli-local  dynamodb create-table --table-name Music --attribute-definitions AttributeName=Artist,AttributeType=S AttributeName=SongTitle,AttributeType=S --key-schema AttributeName=Artist,KeyType=HASH AttributeName=SongTitle,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1
    - awscli-local  dynamodb put-item --table-name Music --item  file://item_table.json  --return-consumed-capacity TOTAL 
    - awscli-local  dynamodb list-tables 
    - awscli-local  dynamodb query --table-name Music --key-conditions file://query_table.json
    

lambda-localstack:
  stage: lambda
  script:
    - awscli-local configure set region $DEFAULT_REGION 
    - awscli-local  lambda list-functions



kafka-localstack:
  stage: kafka
  script:
    - echo '{"InstanceType":"kafka.m5.xlarge","BrokerAZDistribution":"DEFAULT","ClientSubnets":["subnet-0123456789111abcd","subnet-0123456789222abcd","subnet-0123456789333abcd"]}' >  kafka.json
    - awscli-local   kafka create-cluster  --cluster-name "MessagingCluster"  --broker-node-group-info file://kafka.json  --kafka-version "2.2.1" --number-of-broker-nodes 3 --region $DEFAULT_REGION


Scripts Golang:
  stage: golang
  script:
    - go run main.go