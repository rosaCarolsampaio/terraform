image: ubuntu

stages:
  - build
  - create
  - list
  - dynamodb
  - lambda
  - kafka

services:
  - name: localstack/localstack
    alias: localstack

variables:
  SERVICES: s3,sns,sqs, dynamodb,lambda, kafka
  HOSTNAME_EXTERNAL: localstack 
  DEFAULT_REGION: eu-west-2
  AWS_ACCESS_KEY_ID: localkey
  AWS_SECRET_ACCESS_KEY: localsecret
  AWS_DYNAMODB_ENDPOINT: http://dynamodb:8000
  GIT_CLEAN_FLAGS: none
  AWS_ENDPOINT: http://localstack:4566

before_script:
  # - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.example.com
  - apt -y update
  - apt -y install pip
  - pip install awscli

#after_script:
 
cache:
  paths:
    - s3.localhost.localstack.cloud/

test-application:
  stage: build 
  # extends: build
  # cache:
  #   paths:
  #     - s3://my-test-bucket/
  artifacts:
    paths:
      - s3://my-test-bucket/
  script:
    - aws s3api list-buckets --endpoint-url=$AWS_ENDPOINT
    - aws --endpoint-url=$AWS_ENDPOINT s3 ls
    - aws --endpoint-url=$AWS_ENDPOINT s3 mb s3://my-test-bucket
    - aws s3api list-buckets --endpoint-url=$AWS_ENDPOINT

test-localstack:
  stage: list
  dependencies:
    - test-application
  script:
    - aws --endpoint-url=$AWS_ENDPOINT s3 ls
    - aws s3api list-buckets --endpoint-url=$AWS_ENDPOINT

dynamo-localstack:
  stage: dynamodb
  script:
    - echo '{"Artist":{"S":"Acme Band"},"SongTitle":{"S":"Happy Day"}, "AlbumTitle":{"S":"Songs About Life"},"Awards":{"N":"10"}}' > item_table.json 
    - echo '{"Artist":{"AttributeValueList":[{"S":"Acme Band"}],"ComparisonOperator":"EQ"},"SongTitle":{"AttributeValueList":[{"S":"Happy Day"}],"ComparisonOperator":"EQ"}}' > query_table.json 
    - aws configure set region $DEFAULT_REGION
    - aws --endpoint-url $AWS_ENDPOINT dynamodb create-table --table-name Music --attribute-definitions AttributeName=Artist,AttributeType=S AttributeName=SongTitle,AttributeType=S --key-schema AttributeName=Artist,KeyType=HASH AttributeName=SongTitle,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1
    - aws --endpoint-url $AWS_ENDPOINT dynamodb put-item --table-name Music --item  file://item_table.json  --return-consumed-capacity TOTAL 
    - aws --endpoint-url $AWS_ENDPOINT dynamodb list-tables 
    - aws --endpoint-url $AWS_ENDPOINT dynamodb query --table-name Music --key-conditions file://query_table.json
    

lambda-localstack:
  stage: lambda
  script:
    - aws configure set region $DEFAULT_REGION 
    - aws --endpoint-url $AWS_ENDPOINT lambda list-functions



kafka-localstack:
  stage: kafka
  script:
    - |
      aws --endpoint-url$AWS_ENDPOINT  kafka create-cluster \
      --cluster-name "MessagingCluster" \
      --broker-node-group-info file://brokernodegroupinfo.json \
      --kafka-version "2.2.1" \
      --number-of-broker-nodes 3
